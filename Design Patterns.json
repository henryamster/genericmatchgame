{
    "labels": [
        "Abstract Factory",
        "Builder",
        "Factory Method",
        "Object Pool",
        "Prototype",
        "Singleton",
        "Adapter",
        "Bridge",
        "Composite",
        "Decorator",
        "Facade",
        "Flyweight",
        "Private Class Data",
        "Proxy",
        "Chain of responsibility",
        "Command",
        "Interpreter",
        "Iterator",
        "Mediator",
        "Memento",
        "Null Object",
        "Observer",
        "State",
        "Strategy",
        "Template method",
        "Visitor"
    ],
    "descrips": [
        "Creates an instance of several families of classes\n",
        "Separates object construction from its representation\n",
        "Creates an instance of several derived classes\n",
        "Avoid expensive acquisition and release of resources by recycling objects that are no longer in use\n",
        "A fully initialized instance to be copied or cloned\n",
        "A class of which only a single instance can exist\n",
        "Match interfaces of different classes\n",
        "Separates an objectâ€™s interface from its implementation\n",
        "A tree structure of simple and composite objects\n",
        "Add responsibilities to objects dynamically\n",
        "A single class that represents an entire subsystem\n",
        "A fine-grained instance used for efficient sharing\n",
        "Restricts accessor/mutator access\n",
        "An object representing another object\n",
        "A way of passing a request between a chain of objects\n",
        "Encapsulate a command request as an object\n",
        "A way to include language elements in a program\n",
        "Sequentially access the elements of a collection\n",
        "Defines simplified communication between classes\n",
        "Capture and restore an object's internal state\n",
        "Designed to act as a default value of an object\n",
        "A way of notifying change to a number of classes\n",
        "Alter an object's behavior when its state changes\n",
        "Encapsulates an algorithm inside a class\n",
        "Defer the exact steps of an algorithm to a subclass\n",
        "Defines a new operation to a class without change"
    ]
}